(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{348:function(a,s,t){"use strict";t.r(s);var v=t(7),_=Object(v.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"一、初识spring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、初识spring"}},[a._v("#")]),a._v(" 一、初识Spring")]),a._v(" "),s("h3",{attrs:{id:"_1-ocp开闭原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-ocp开闭原则"}},[a._v("#")]),a._v(" 1.OCP开闭原则")]),a._v(" "),s("p",[s("strong",[a._v("什么是OCP？")])]),a._v(" "),s("p",[a._v("软件开发7大原则之一：开闭原则，是最核心，最基本的，其他6个原则都是为OCP服务的。")]),a._v(" "),s("p",[s("strong",[a._v("OCP核心是什么？")])]),a._v(" "),s("p",[a._v("开？对扩展开放。")]),a._v(" "),s("p",[a._v("闭？对修改关闭。")]),a._v(" "),s("p",[a._v("只要在扩展系统功能的时候，不修改之前的代码，就符合OCP开闭原则。")]),a._v(" "),s("p",[s("strong",[a._v("为什么要OCP？")])]),a._v(" "),s("p",[a._v("如果修改了之前的代码，那么所有的程序都要重新进行测试，非常麻烦。")]),a._v(" "),s("h3",{attrs:{id:"_2-dip依赖倒置原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-dip依赖倒置原则"}},[a._v("#")]),a._v(" 2.DIP依赖倒置原则")]),a._v(" "),s("p",[s("strong",[a._v("什么是DIP？")])]),a._v(" "),s("p",[a._v("面向接口编程，面向抽象编程，不要面向具体编程。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("违背了DIP依赖倒置\nprivate UserDao userDao = new UserDaoForMysql();\n==> 程序员new了一个具体的对象，形成了 上 依赖 下（下面改动，上一层的代码也要改动，违背OCP原则）,在扩展的时候就非常麻烦。\n\n遵守了DIP依赖倒置\nprivate UserDao userDao;\n==> 不用程序员new对象了，交给spring来干，就不会形成 上 依赖 下，下一层拓展了，这一层不要改动。\n")])])]),s("p",[s("strong",[a._v("目的是什么？")])]),a._v(" "),s("p",[a._v("降低程序的耦合度，提交扩展力。")]),a._v(" "),s("h3",{attrs:{id:"_3-ioc控制反转-编程思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-ioc控制反转-编程思想"}},[a._v("#")]),a._v(" 3.IOC控制反转--编程思想")]),a._v(" "),s("p",[s("strong",[a._v("反转是什么")])]),a._v(" "),s("ol",[s("li",[a._v("程序员 在程序中 不采用硬编码的方式 "),s("strong",[a._v("创建对象")])]),a._v(" "),s("li",[a._v("程序员 在程序中 不采用硬编码的方式"),s("strong",[a._v("维护对象关系")])])]),a._v(" "),s("p",[a._v("**控制反转：**是一种思想，由于出现的比较新，没有纳入设计模式。")]),a._v(" "),s("h2",{attrs:{id:"二、spring容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、spring容器"}},[a._v("#")]),a._v(" 二、spring容器")]),a._v(" "),s("h3",{attrs:{id:"依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入"}},[a._v("#")]),a._v(" 依赖注入")]),a._v(" "),s("p",[s("strong",[a._v("spring")]),a._v("通过"),s("strong",[a._v("依赖注入(DI)方法")]),a._v("实现了IOC思想")]),a._v(" "),s("ol",[s("li",[a._v("spring帮程序员new对象。")]),a._v(" "),s("li",[a._v("spring帮程序员维护对象与对象的关系。")])]),a._v(" "),s("p",[s("strong",[a._v("依赖注入有两种")])]),a._v(" "),s("ol",[s("li",[a._v("set注入(执行set方法给属性赋值)")]),a._v(" "),s("li",[a._v("构造方法注入(执行构造方法给属性赋值)")])]),a._v(" "),s("p",[s("strong",[a._v("依赖")]),a._v("是什么？"),s("strong",[a._v("注入")]),a._v("是什么？")]),a._v(" "),s("p",[a._v("依赖：A对象和B对象的关系")]),a._v(" "),s("p",[a._v("注入：是一种手段，通过这种手段，可以让A和B产生关系")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("总结")]),a._v(" "),s("p",[a._v("spring通过依赖注入(DI)实现了IOC控制反转思想。")]),a._v(" "),s("p",[a._v("依赖：A与B的关系。")]),a._v(" "),s("p",[a._v("注入：一种手段，让A与B产生关系，包括：set注入和构架方法注入。")]),a._v(" "),s("p",[a._v("依赖注入：实现IOC的具体方法，通过注入的方法，让A与B两个对象产生关系。")])]),a._v(" "),s("h3",{attrs:{id:"spring八大模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring八大模块"}},[a._v("#")]),a._v(" "),s("strong",[a._v("spring八大模块")])]),a._v(" "),s("p",[a._v("核心是IOC控制反转和AOP面向切面编程。")]),a._v(" "),s("h3",{attrs:{id:"spring概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring概述"}},[a._v("#")]),a._v(" spring概述")]),a._v(" "),s("ol",[s("li",[a._v("轻量 1MB的JAR文件")]),a._v(" "),s("li",[a._v("控制反转")]),a._v(" "),s("li",[a._v("面向切面")]),a._v(" "),s("li",[a._v("容器")]),a._v(" "),s("li",[a._v("框架")])]),a._v(" "),s("h2",{attrs:{id:"三、spring6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、spring6"}},[a._v("#")]),a._v(" 三、Spring6")]),a._v(" "),s("h3",{attrs:{id:"_1-概念理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念理解"}},[a._v("#")]),a._v(" 1.概念理解")]),a._v(" "),s("h4",{attrs:{id:"springioc底层实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springioc底层实现"}},[a._v("#")]),a._v(" springIOC底层实现")]),a._v(" "),s("p",[a._v("通过XML解析 + 工厂模式 + 反射机制")]),a._v(" "),s("h4",{attrs:{id:"spring怎么new对象的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring怎么new对象的"}},[a._v("#")]),a._v(" "),s("strong",[a._v("spring怎么new对象的？")])]),a._v(" "),s("p",[a._v("程序员将类注册到spring的配置文件中，然后spring通过类的反射机制，调用类的无参构造来实例化对象。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('类的反射机制\nClass clazz =  Class.forName("类的路径");\nObject obj = clazz.newInstance();\n')])])]),s("h4",{attrs:{id:"spring怎么存bean对象吖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring怎么存bean对象吖"}},[a._v("#")]),a._v(" "),s("strong",[a._v("spring怎么存bean对象吖？")])]),a._v(" "),s("p",[a._v("存到了一个Map中Map<String,Object>;")]),a._v(" "),s("p",[a._v("key是id，value是实例化的对象。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/zhuchenghao1337/github-images/main/2023/20230402142800.png",alt:""}})]),a._v(" "),s("h4",{attrs:{id:"spring怎么维护bean之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring怎么维护bean之间的关系"}},[a._v("#")]),a._v(" spring怎么维护bean之间的关系")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/zhuchenghao1337/github-images/main/2023/20230402204252.png",alt:""}})]),a._v(" "),s("p",[a._v("怎么实现 "),s("strong",[a._v("pwdbookMapper")]),a._v("的赋值同时还是我们想要的对象？")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),s("p",[a._v("pwdbookMapper是PwdbookServiceImpl类的属性，有两种方法可以赋值")]),a._v(" "),s("ol",[s("li",[a._v("创建对象时调用构造方法来赋值；")]),a._v(" "),s("li",[a._v("实例化对象之后，使用set方法来赋值。")])])]),a._v(" "),s("p",[a._v("1.在spring配置文件中，配置要传入的对象              ===》 配置我们想要的对象")]),a._v(" "),s("p",[a._v("2.spring利用"),s("strong",[a._v("类的反射机制")]),a._v("实例化对象时，可以根据构造方法给属性赋值，也可以在创建对象完成后调用setter方法就行赋值。")]),a._v(" "),s("p",[a._v("===》给属性赋值")]),a._v(" "),s("h3",{attrs:{id:"_2-注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-注入"}},[a._v("#")]),a._v(" 2.注入")]),a._v(" "),s("p",[a._v("注入的值有2中类型，简单类型包括")]),a._v(" "),s("ol",[s("li",[a._v("8种基本类型和8种包装类")]),a._v(" "),s("li",[a._v("枚举")]),a._v(" "),s("li",[a._v("CharSequence")]),a._v(" "),s("li",[a._v("Number")]),a._v(" "),s("li",[a._v("Date")]),a._v(" "),s("li",[a._v("Temporal")]),a._v(" "),s("li",[a._v("URI")]),a._v(" "),s("li",[a._v("URL")]),a._v(" "),s("li",[a._v("Locale（语言）")]),a._v(" "),s("li",[a._v("class")])]),a._v(" "),s("h4",{attrs:{id:"非简单类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非简单类型"}},[a._v("#")]),a._v(" 非简单类型")]),a._v(" "),s("p",[a._v("注入外部bean")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('使用ref属性来注入\n<bean id="***" class="***">\n\t<property name="username" ref="***">\n</bean>\n')])])]),s("p",[a._v("注入内部bean")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('使用嵌套的bean标签来注入\n<bean id="***" class="***">\n\t<property name="username">\n\t\t<bean class="***">\n\t</property>\n</bean>\n')])])]),s("h4",{attrs:{id:"简单类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单类型"}},[a._v("#")]),a._v(" 简单类型")]),a._v(" "),s("p",[a._v("使用"),s("strong",[a._v("value")]),a._v("来注入")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<bean id='***' value=”张三\">\n")])])]),s("h2",{attrs:{id:"四、"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、"}},[a._v("#")]),a._v(" 四、")])])}),[],!1,null,null,null);s.default=_.exports}}]);