(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{330:function(t,v,_){"use strict";_.r(v);var s=_(7),a=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"高内聚与低耦合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#高内聚与低耦合"}},[t._v("#")]),t._v(" 高内聚与低耦合")]),t._v(" "),v("p",[t._v("不同模块之间的关系就是耦合；模块内不同功能的联系就是类聚。")]),t._v(" "),v("p",[v("strong",[t._v("模块")]),t._v("怎么定义？")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/zhuchenghao1337/github-images/main/2023/20230402173928.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"软件架构模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#软件架构模式"}},[t._v("#")]),t._v(" 软件架构模式")]),t._v(" "),v("h3",{attrs:{id:"mvc架构模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mvc架构模式"}},[t._v("#")]),t._v(" MVC架构模式")]),t._v(" "),v("p",[t._v("把一个交互式应用程序划分为3个部分：")]),t._v(" "),v("ul",[v("li",[t._v("模型：包含业务逻辑和数据")]),t._v(" "),v("li",[t._v("视图：进行数据展示")]),t._v(" "),v("li",[t._v("控制器：接受输入，选择业务逻辑实现，选择试图响应")])]),t._v(" "),v("p",[v("strong",[t._v("优点")]),t._v("：")]),t._v(" "),v("ol",[v("li",[t._v("多个视图共享一个模型，提高代码可重用行。")]),t._v(" "),v("li",[t._v("三个模块相互独立，松耦合架构")]),t._v(" "),v("li",[t._v("控制器提高了应用程序的灵活性和可配置性")])]),t._v(" "),v("p",[v("strong",[t._v("缺点")]),t._v("：")]),t._v(" "),v("ol",[v("li",[t._v("原理复杂")]),t._v(" "),v("li",[t._v("增加了系统结构和实现的复杂性")]),t._v(" "),v("li",[t._v("视图对模型数据的访问效率低")])]),t._v(" "),v("h3",{attrs:{id:"待更新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#待更新"}},[t._v("#")]),t._v(" 待更新....")]),t._v(" "),v("h2",{attrs:{id:"代码-框架的侵入式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#代码-框架的侵入式"}},[t._v("#")]),t._v(" 代码/框架的侵入式")]),t._v(" "),v("p",[v("strong",[t._v("侵入式")]),t._v("：")]),t._v(" "),v("p",[t._v("这个代码/模块嵌入了其他的代码，可能是引入的框架，或者是通过接口继承得到的。")]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("缺点")]),t._v(" "),v("p",[t._v("这些代码不引入框架就没法使用，没法单元测试。")])]),t._v(" "),v("p",[v("strong",[t._v("非侵入式")]),t._v("：")]),t._v(" "),v("p",[t._v("比如spring框架是非侵入式的，你引入spring的相关依赖，就可以使用。")])])}),[],!1,null,null,null);v.default=a.exports}}]);