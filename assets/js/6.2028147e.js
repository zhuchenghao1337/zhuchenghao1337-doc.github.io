(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{330:function(a,e,t){"use strict";t.r(e);var s=t(7),n=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"_1-项目配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-项目配置"}},[a._v("#")]),a._v(" 1.项目配置")]),a._v(" "),e("h3",{attrs:{id:"_1-1eslint校验功能关闭"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1eslint校验功能关闭"}},[a._v("#")]),a._v(" 1.1eslint校验功能关闭")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vue.config.js中\n\nconst { defineConfig } = require('@vue/cli-service')\nmodule.exports = defineConfig({\n  transpileDependencies: true,\n  lintOnSave: false // 关闭eslint校验\n})\n")])])]),e("h3",{attrs:{id:"_1-2src文件夹配置别名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2src文件夹配置别名"}},[a._v("#")]),a._v(" 1.2src文件夹配置别名@")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('jsconfig.json中\n\n{\n  "compilerOptions": {\n    "target": "es5",\n    "module": "esnext",\n    "baseUrl": "./",\n    "moduleResolution": "node",\n    "paths": {\n      "@/*": [\n        "src/*" // src文件夹配置别名@\n      ]\n    },\n    "lib": [\n      "esnext",\n      "dom",\n      "dom.iterable",\n      "scripthost"\n    ]\n  }\n}\n')])])]),e("h2",{attrs:{id:"_2-分析路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-分析路由"}},[a._v("#")]),a._v(" 2.分析路由")]),a._v(" "),e("p",[a._v("分析哪些组件是路由组件 哪些组件是非路由组件")]),a._v(" "),e("h2",{attrs:{id:"_3-开发思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-开发思路"}},[a._v("#")]),a._v(" 3.开发思路")]),a._v(" "),e("p",[a._v("1.书写静态页面 html+css")]),a._v(" "),e("p",[a._v("2.拆分组件")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("注意组件结构 + 组件样式 + 图片资源\n")])])]),e("p",[a._v("3.获取服务器的数据动态展示")]),a._v(" "),e("p",[a._v("4.完成相应的动态业务处理逻辑")]),a._v(" "),e("h2",{attrs:{id:"_4-使用非路由组件的步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用非路由组件的步骤"}},[a._v("#")]),a._v(" 4.使用非路由组件的步骤")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1.创建\n2.引入\n3.注册\n4.使用\n")])])]),e("h2",{attrs:{id:"_5-路由组件的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-路由组件的使用"}},[a._v("#")]),a._v(" 5.路由组件的使用")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\n")])])]),e("p",[a._v("路由的跳转就两种形式：")]),a._v(" "),e("p",[a._v("声明式导航（router-link：务必要有to属性）\n编程式导航 $router.push | replace\n编程式导航更好用：因为可以书写自己的业务逻辑")]),a._v(" "),e("h2",{attrs:{id:"_6-meta路由元信息来控制组件的显示"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-meta路由元信息来控制组件的显示"}},[a._v("#")]),a._v(" 6.meta路由元信息来控制组件的显示")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    {\n      path: '/home',\n      component: Home,\n      meta: {\n        show: true\n      }\n    },\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('      <Footer v-show="$route.meta.show"></Footer>\n')])])]),e("h2",{attrs:{id:"_7-路由传参"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-路由传参"}},[a._v("#")]),a._v(" 7.路由传参")]),a._v(" "),e("p",[a._v("声明式导航（router-link：务必要有to属性）")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('携带动态参数\n<router-link class="sui-btn btn-xlarge" :to="`/detail/${skuInfo.id}`">查看商品详情</router-link>\n')])])]),e("p",[a._v("编程式导航 $router.push | replace")]),a._v(" "),e("p",[a._v("params参数：路径的一部分，需要占位")]),a._v(" "),e("p",[a._v("query参数：？k=v不需要占位")]),a._v(" "),e("p",[a._v("// 可以让parms参数和query参数通过props传递给路由组件")]),a._v(" "),e("p",[a._v("三种方式")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('            // 路由传参\n            // 第一种 字符串形式\n            this.$router.push("/search/" + this.keyword+"?keyword=" + this.keyword);\n            // 第2种 模板字符串\n            this.$router.push(`/search/${this.keyword}?keyword=${this.keyword}`)\n            // 第3种 对象\n            this.$router.push({\n                name: "search", // 对象传参只能是name\n                params: {\n                    keyword: this.keyword\n                },\n                query: {\n                    keyword: this.keyword\n                }\n            })\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    {\n      // path: '/search/:keyword',// params需要占位\n      path: '/search',\n      name: 'search', // 对象传参只能是name\n      component: Search,\n      meta: {\n        show: true\n      }\n    },\n")])])]),e("p",[a._v("注意点 parms参数可传可不传")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    {\n      // path: '/search/:keyword',\n      path: '/search/:keyword?', //加问号\n      name: 'search',\n      component: Search,\n      meta: {\n        show: true\n      }\n    },\n")])])]),e("p",[a._v("解决 parms传空值路径问题")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("                params: {\n                    keyword: this.keyword||undefined\n                },\n")])])]),e("h2",{attrs:{id:"_8-路由传参的最终解决方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-路由传参的最终解决方案"}},[a._v("#")]),a._v(" 8.路由传参的最终解决方案")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    {\n      path: '/search/:keyword?', // parms参数可传可不传 ?\n      name: 'search', // 对象传参只能是name\n      component: Search,\n      meta: {\n        show: true\n      }\n    },\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('            this.$router.push({\n                name: "search", // 对象传参只能是name\n                params: {\n                    keyword: this.keyword || undefined // 解决 parms传空值路径问题\n                },\n                query: {\n                    k: this.keyword\n                }\n            })\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("拿值\n<template>\n    <div>\n        params:{{ $route.params.keyword }}\n        <br>\n        query:{{ $route.query.keyword }}\n    </div>\n</template>\n")])])]),e("h2",{attrs:{id:"_9-重写push和replace方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-重写push和replace方法"}},[a._v("#")]),a._v(" 9.重写push和replace方法")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '@/views/Home'\nimport Search from '@/views/Search'\nimport Login from '@/views/Login'\nimport Register from '@/views/Register'\nVue.use(VueRouter)\n\n\n// 保存一份\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace;\n// 重写push方法\nVueRouter.prototype.push = function(location, resolve, reject) {\n  if(resolve && reject){\n    originPush.call(this, location, resolve, reject)\n  }else{\n    originPush.call(this,location,()=>{},()=>{})\n  }\n}\n// 重写replace方法\nVueRouter.prototype.replace = function(location, resolve, reject) {\n  if(resolve && reject){\n    originReplace.call(this, location, resolve, reject)\n  }else{\n    originReplace.call(this,location,()=>{},()=>{})\n  }\n}\n\n\nexport default new VueRouter({\n  routes: [\n    {\n      path: '/home',\n      component: Home,\n      meta: {\n        show: true\n      }\n    },\n    {\n      path: '/search/:keyword?', // parms参数可传可不传 ?\n      name: 'search', // 对象传参只能是name\n      component: Search,\n      meta: {\n        show: true\n      }\n    },\n    {\n      path: '/login',\n      component: Login,\n      meta: {\n        show: false\n      }\n    },\n    {\n      path: '/register',\n      component: Register,\n      meta: {\n        show: false\n      }\n    },\n    // 重定向\n    {\n      path: '*',\n      component: Home\n    }\n  ]\n})\n\n")])])]),e("h2",{attrs:{id:"_10-三级联动组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-三级联动组件"}},[a._v("#")]),a._v(" 10.三级联动组件")]),a._v(" "),e("p",[a._v("全局组件 注册一次 全局使用")]),a._v(" "),e("h2",{attrs:{id:"_11-axious二次封装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-axious二次封装"}},[a._v("#")]),a._v(" 11.axious二次封装")]),a._v(" "),e("p",[a._v("为什么要封装二次？")]),a._v(" "),e("p",[a._v("请求拦截器，响应拦截器。")]),a._v(" "),e("p",[a._v("请求拦截器 设置请求头")]),a._v(" "),e("p",[a._v("响应拦截器 处理异常")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const { defineConfig } = require('@vue/cli-service')\nmodule.exports = defineConfig({\n  transpileDependencies: true,\n  lintOnSave: false, // 关闭eslint校验\n  devServer: {\n    proxy: {\n      '/api': {  // 匹配/api开头的路径\n        target: 'http://gmall-h5-api.atguigu.cn',\n        // pathRewrite: { '^/api': '' },\n      },\n    },\n  },\n})\n")])])]),e("h2",{attrs:{id:"_12-nprogress进度条"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-nprogress进度条"}},[a._v("#")]),a._v(" 12.nprogress进度条")]),a._v(" "),e("p",[a._v("安装")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm install nprogress\n")])])]),e("p",[a._v("业务")]),a._v(" "),e("p",[a._v("发请求时出现 结束后消失")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('requests.js中\n\n// 引入进度条\nimport nprogress from "nprogress";\n// 引入进度条样式\nimport "nprogress/nprogress.css";\n\n\n\n// 请求拦截器\nrequests.interceptors.request.use((config) => {\n    // config配置对象 config有一个属性headers\n    // 进度条开始动\n    nprogress.start();\n    console.log(config);\n    return config;\n});\n\nrequests.interceptors.response.use((res) => {\n    // 进度条结束\n    nprogress.done();\n    return res.data;\n}, (error) => {\n    return Promise.reject(new Error("faile"))\n});\n\n')])])]),e("h2",{attrs:{id:"_13-vuex模块式开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-vuex模块式开发"}},[a._v("#")]),a._v(" 13.vuex模块式开发")]),a._v(" "),e("h3",{attrs:{id:"_1-基本使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本使用"}},[a._v("#")]),a._v(" 1.基本使用")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 使用vuex\nimport Vue from "vue";\nimport Vuex from \'vuex\';\n\n// 使用\nVue.use(Vuex);\n\nconst state = {\n    count: 1,\n};\n// 更新state唯一手段\nconst mutations = {\n    ADD(state){\n        state.count++\n    }\n};\n// 可以提交mutations 和处理异步\nconst actions = {\n    add({commit}){\n        commit("ADD")\n    }\n\n};\n// 计算属性\nconst getters = {};\n\n// 对外暴露实例\nexport default new Vuex.Store({\n    state,\n    mutations,\n    actions,\n    getters\n})\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 引入仓库\nimport store from '@/store'\nnew Vue({\n  render: h => h(App),\n  // 注册路由\n  router,\n  // 注册仓库\n  store\n}).$mount('#app')\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("  methods:{\n    add(){\n      this.$store.dispatch('add');\n    }\n  }\n")])])]),e("h3",{attrs:{id:"_2-模块开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-模块开发"}},[a._v("#")]),a._v(" 2.模块开发")]),a._v(" "),e("p",[a._v("小仓库")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 这是小仓库\nconst state = {\n    count: 1,\n};\nconst mutations = {\n};\nconst actions = {\n\n};\nconst getters = {};\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}\n")])])]),e("p",[a._v("大仓库")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 使用vuex\nimport Vue from \"vue\";\nimport Vuex from 'vuex';\n\n// 使用\nVue.use(Vuex);\n\n// 引入小仓库\nimport home from '@/store/home'\nimport search from '@/store/search'\n// 对外暴露实例\nexport default new Vuex.Store({\n    modules:{\n        home,\n        search\n    }\n})\n")])])]),e("p",[a._v("使用")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('    mounted(){\n        // 通知vuex发请求，获取数据，存储到仓库中\n        this.$store.dispatch("categoryList");\n    }\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('import { reqCategoryList } from "@/api";\n\nconst state = {\n    categoryList:[]\n};\nconst mutations = {\n    CATEGORYLIST(state, categoryList){\n        state.categoryList = categoryList\n    }\n};\nconst actions = {\n    async categoryList({commit}) {\n        // 通过api发请求\n        let res = await reqCategoryList();\n        if(res.code==200){\n            commit("CATEGORYLIST",res.data)\n        }\n    }\n};\nconst getters = {};\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}\n')])])]),e("h2",{attrs:{id:"_14-一级分类动态添加背景颜色"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-一级分类动态添加背景颜色"}},[a._v("#")]),a._v(" 14.一级分类动态添加背景颜色")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("通过js来完成\n动态加类名\n:class\n")])])]),e("h2",{attrs:{id:"_15-通过js来控制二三级菜单显示与隐藏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-通过js来控制二三级菜单显示与隐藏"}},[a._v("#")]),a._v(" 15.通过js来控制二三级菜单显示与隐藏")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("              <div class=\"item-list clearfix\" :style=\"{display:currentIndex==index?'block':'none'}\">\n")])])]),e("h2",{attrs:{id:"_16-卡顿现象-防抖与节流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16-卡顿现象-防抖与节流"}},[a._v("#")]),a._v(" 16.卡顿现象 ---防抖与节流")]),a._v(" "),e("p",[a._v("短时间大量触发时间，浏览器解析不过来。")]),a._v(" "),e("p",[a._v("防抖:就是回城,被打断就要重新来；快速触发，只会触发一次。\n截流:就是技能CD,CD没好,你用不了技能")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 引入节流函数\nimport throttle from "lodash/throttle";\n\n// 节流防止卡顿\nchangeIndex: throttle(function (index) {\n  this.currentIndex = index;\n}, 50),\n\n\n')])])]),e("h2",{attrs:{id:"_17-路由跳转的逻辑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17-路由跳转的逻辑"}},[a._v("#")]),a._v(" 17.路由跳转的逻辑")]),a._v(" "),e("h3",{attrs:{id:"声明式跳转带上动态参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#声明式跳转带上动态参数"}},[a._v("#")]),a._v(" 声明式跳转带上动态参数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<router-link :to="`/detail/${good.id}`"><img :src="good.defaultImg" /></router-link>\n')])])]),e("p",[a._v("需求：")]),a._v(" "),e("p",[a._v("我现在在主页 我点一个链接 我需要跳转到另一个路由组件里面，并展示数据。")]),a._v(" "),e("p",[a._v("方法：")]),a._v(" "),e("p",[a._v("路由传参 再根据参数查数据并展示。")]),a._v(" "),e("p",[a._v("使用声明式跳转 不行 耗性能 回出现卡顿现象。")]),a._v(" "),e("p",[a._v("解决方案： 编程式导航加事件委派")]),a._v(" "),e("p",[a._v("问题：1.怎么判断是a标签触发点击时间")]),a._v(" "),e("p",[a._v("​\t\t\t2.如何获取参数")]),a._v(" "),e("p",[a._v("利用自定义属性")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<a :data-categoryName="c1.categoryName">{{ c1.categoryName }}</a>\n\n自定义属性:data-categoryName\n')])])]),e("p",[a._v("2.如何获取参数")]),a._v(" "),e("p",[a._v("利用自定义属性")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(':data-category1Id="c1.categoryId"\n')])])]),e("h3",{attrs:{id:"注意点1-自定义属性的对应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意点1-自定义属性的对应"}},[a._v("#")]),a._v(" 注意点1 自定义属性的对应")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(':data-category1Id="c1.categoryId"\n\n\n怎么拿\nlet element = event.target;\nlet { categoryname, category1id, category2id, category3id } = element.dataset; // categoryname浏览器将N小写了\n\ndata-category1Id      ====>>>>  category1id   去除了驼峰命名法\n')])])]),e("h3",{attrs:{id:"注意点2-任务委派-自定义属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意点2-任务委派-自定义属性"}},[a._v("#")]),a._v(" 注意点2   任务委派+自定义属性")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("我们使用了 任务委派 来实现跳转\n就是 让定义事件在 父标签 上\n父标签 会委派\n\n需要自己去判断哪些 标签能触发\n通过自定义属性来判断\n")])])]),e("h3",{attrs:{id:"整体代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整体代码"}},[a._v("#")]),a._v(" 整体代码")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    // 进行路由跳转\n    goSearch(event) {\n      // 判断是不是 a标签触发的点击事件\n      // a标签有我们自定义的属性\n      // 使用event.dataset可以获取自定义属性\n      let element = event.target;\n      let { categoryname, category1id, category2id, category3id } = element.dataset; // categoryname浏览器将N小写了\n      if (categoryname) { // 判断是不是 a标签触发的点击事件\n\n        // 整理路由跳转的参数\n        let location = {name:'search'};\n        let query = {categoryName: categoryname};\n\n        // 怎么判断是1级 2级 3级的a\n        // 通过自定义属性\n        if(category1id){\n            query.category1Id = category1id;\n        }else if(category2id){\n            query.category2Id = category2id;\n        }else{\n            query.category3Id = category3id;\n        }\n        // 继续整理参数\n        location.query = query;\n        this.$router.push(location); // 跳转\n      }\n      \n    },\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<div class="sort">\n          <div class="all-sort-list2" @click="goSearch">\n            <div\n              class="item"\n              v-for="(c1, index) in categoryList"\n              :key="c1.categoryId"\n              :class="{ cur: currentIndex == index }"\n            >\n              <h3 @mouseenter="changeIndex(index)">\n                <a\n                  :data-categoryName="c1.categoryName"\n                  :data-category1Id="c1.categoryId"\n                  >{{ c1.categoryName }}</a\n                >\n              </h3>\n              <div\n                class="item-list clearfix"\n                :style="{ display: currentIndex == index ? \'block\' : \'none\' }"\n              >\n                <div\n                  class="subitem"\n                  v-for="(c2, index) in c1.categoryChild"\n                  :key="c2.categoryId"\n                >\n                  <dl class="fore">\n                    <dt>\n                      <a\n                        :data-categoryName="c2.categoryName"\n                        :data-category2Id="c2.categoryId"\n                        >{{ c2.categoryName }}</a\n                      >\n                    </dt>\n                    <dd>\n                      <em\n                        v-for="(c3, index) in c2.categoryChild"\n                        :key="c3.categoryId"\n                      >\n                        <a\n                          :data-categoryName="c3.categoryName"\n                          :data-category3Id="c3.categoryId"\n                          >{{ c3.categoryName }}</a\n                        >\n                      </em>\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n')])])]),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("实现路由跳转\n\n任务委派 + 自定义属性\n\n")])])]),e("h2",{attrs:{id:"_18-mapstate使用vuex的数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-mapstate使用vuex的数据"}},[a._v("#")]),a._v(" 18.mapState使用vuex的数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 使用vuex的数据\nimport { mapState } from "vuex";\n\n\n  computed: {\n    ...mapState({\n      // 右侧需要一个函数，当使用这个计算属性时，右侧函数会执行一下\n      // 注入一个state，就是大仓库的数据\n\n      // categoryList:(state)=>{\n      //     console.log(state);\n      // }\n      // 简化\n      categoryList: (state) => state.home.categoryList,\n    }),\n  },\n  \n  \n  \n  v-for="(c1, index) in categoryList" // 直接用了\n  \n')])])]),e("h2",{attrs:{id:"_19-mock模拟数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_19-mock模拟数据"}},[a._v("#")]),a._v(" 19.mock模拟数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# 安装\nnpm install mockjs\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("使用步骤\n1.创建mock文件夹\n2.准备假数据\n3.把mock需要的图片放到public文件夹中\n4.写mockServe.js\n5.main.js引入mockServe.js\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("import Mock from 'mockjs'\n\nimport banner from './banner.json'\nimport floor from './floor.json'\n\nMock.mock(\"/mock/banner\", {code:200,data:banner});\nMock.mock(\"/mock/floor\", {code:200,data:floor});\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("main.js中\nimport '@/mock/mockServe'\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("然后正常使用\n")])])]),e("h2",{attrs:{id:"_20-轮播图swiper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_20-轮播图swiper"}},[a._v("#")]),a._v(" 20.轮播图swiper")]),a._v(" "),e("p",[a._v("安装")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm install swiper@5\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1.引包和样式（css/js)\n2.添加页面结构 html\n3.new Swiper实例\n")])])]),e("p",[a._v("1.引包和样式")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("引包\nimport Swiper from \"swiper\";\n样式\nimport 'swiper/css/swiper.css'\n")])])]),e("p",[a._v("2.页面结构")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('        \x3c!--banner轮播--\x3e\n        <div class="swiper-container" id="mySwiper">\n          <div class="swiper-wrapper">\n            <div\n              class="swiper-slide"\n              v-for="(carousel, index) in bannerList"\n              :key="carousel.id"\n            >\n              \x3c!-- <img src="./images/banner1.jpg" /> --\x3e\n              <img :src="carousel.imgUrl" />\n            </div>\n          </div>\n          \x3c!-- 如果需要分页器 --\x3e\n          <div class="swiper-pagination"></div>\n\n          \x3c!-- 如果需要导航按钮 --\x3e\n          <div class="swiper-button-prev"></div>\n          <div class="swiper-button-next"></div>\n        </div>\n')])])]),e("p",[a._v("3.new Swiper实例")]),a._v(" "),e("p",[a._v("这里遇到的问题是\nv-for 没遍历完导致 new Siper没套上 失效")]),a._v(" "),e("p",[a._v("一样要等数据加载完成后 才能new Siper")]),a._v(" "),e("p",[a._v("解决方案：")]),a._v(" "),e("p",[a._v("watch + nextTick")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vue.nextTick()\n当数据更新了，在dom中渲染后，自动执行该函数，\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('  watch: {\n    // 监听bannerList的数据变化\n    bannerList: {\n      handler(newValue, oldValue) {\n        \n        \n        \n        ///    当数据更新了，在dom中渲染后，自动执行该函数，\n        this.$nextTick(() => {\n          var mySwiper = new Swiper(\n            document.querySelector(".swiper-container"),\n            {\n              direction: "horizontal", // 垂直切换选项\n              loop: true, // 循环模式选项\n\n              // 如果需要分页器\n              pagination: {\n                el: ".swiper-pagination",\n              },\n\n              // 如果需要前进后退按钮\n              navigation: {\n                nextEl: ".swiper-button-next",\n                prevEl: ".swiper-button-prev",\n              },\n\n              // 如果需要滚动条\n              scrollbar: {\n                el: ".swiper-scrollbar",\n              },\n            }\n          );\n        });\n      },\n    },\n  },\n')])])]),e("h2",{attrs:{id:"_21-vue-nexttick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_21-vue-nexttick"}},[a._v("#")]),a._v(" 21.vue.nextTick()")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("当数据更新了，在dom中渲染后，自动执行该函数\n\n经常 很多插件需要dom全部渲染完了 才能正常使用。\n使用nextTick()和watch可以解决\n")])])]),e("h2",{attrs:{id:"_22-常用步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_22-常用步骤"}},[a._v("#")]),a._v(" 22.常用步骤")]),a._v(" "),e("p",[a._v("1.写api")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("import mockRequests from './mockAjax'\n\nexport const reqFloorList =()=>{\n    return mockRequests({\n        url:\"/floor\",\n        method: 'get'\n    })\n}\n\n\nexport const reqGoodsInfo=(skuId)=>{\n    return requests({\n        url:`/item/${skuId}`,\n        method:'get',\n    })\n}\n\n\n\n")])])]),e("p",[a._v("2.提交action")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('  mounted(){\n    this.$store.dispatch("getFloorList");\n  }\n')])])]),e("p",[a._v("3.写action")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('import { reqFloorList } from "@/api";\n\nconst actions = {\n    async getFloorList({commit}){\n        let res = await reqFloorList();\n        if(res.code == 200){\n            commit("FLOORLIST",res.data);\n        }\n    },\n};\n')])])]),e("p",[a._v("4.写mutations和state")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const state = {\n    floorList:[],\n};\n\nconst mutations = {\n    FLOORLIST(state, floorList){\n        state.floorList = floorList;\n    }\n};\n")])])]),e("p",[a._v("5.使用数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("import {mapState} from 'vuex';\n\n\n  computed:{\n    ...mapState({\n      floorList:(state)=>state.home.floorList,\n    })\n  },\n")])])]),e("h2",{attrs:{id:"_23-v-for遍历自定义组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_23-v-for遍历自定义组件"}},[a._v("#")]),a._v(" 23.v-for遍历自定义组件")]),a._v(" "),e("p",[a._v("与组件通信一起使用")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('    \x3c!-- v-for 遍历组件并传值 --\x3e\n    :list="floor  传值\n    \n    <Floor v-for="(floor,index) in floorList" :key="floor.id" :list="floor"></Floor>\n')])])]),e("h2",{attrs:{id:"_24-父与子组件通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_24-父与子组件通信"}},[a._v("#")]),a._v(" 24.父与子组件通信")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('父传\n\x3c!-- v-for 遍历组件并传值 --\x3e\n    <Floor v-for="(floor,index) in floorList" :key="floor.id" :list="floor"></Floor>\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("子收\n<script>\nexport default {\n  props:['list'],\n};\n<\/script>\n")])])]),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/zhuchenghao1337/github-images/main/2022/20230107164726.png",alt:""}})]),a._v(" "),e("h2",{attrs:{id:"_25-相同结构的组件封装为共用组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_25-相同结构的组件封装为共用组件"}},[a._v("#")]),a._v(" 25.相同结构的组件封装为共用组件")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("开发时 一个组件在很多地方都使用 弄为全局组件\n注册一次 全局使用\n比如：轮播图 分页器等等。\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<template>\n  <div class="swiper-container" ref="cur">\n    <div class="swiper-wrapper">\n      <div\n        class="swiper-slide"\n        v-for="(carousel, index) in list"\n        :key="carousel.id"\n      >\n        <img :src="carousel.imgUrl" />\n      </div>\n    </div>\n    \x3c!-- 如果需要分页器 --\x3e\n    <div class="swiper-pagination"></div>\n\n    \x3c!-- 如果需要导航按钮 --\x3e\n    <div class="swiper-button-prev"></div>\n    <div class="swiper-button-next"></div>\n  </div>\n</template>\n\n<script>\nimport Swiper from "swiper";\nexport default {\n  name: "Carsousel",\n  props: ["list"],\n  watch: {\n    list: {\n      immediate: true, // 立即监听\n      handler() {\n        this.$nextTick(() => {\n          var mySwiper = new Swiper(this.$refs.cur, {\n            direction: "horizontal", // 垂直切换选项\n            loop: true, // 循环模式选项\n\n            // 如果需要分页器\n            pagination: {\n              el: ".swiper-pagination",\n            },\n\n            // 如果需要前进后退按钮\n            navigation: {\n              nextEl: ".swiper-button-next",\n              prevEl: ".swiper-button-prev",\n            },\n\n            // 如果需要滚动条\n            scrollbar: {\n              el: ".swiper-scrollbar",\n            },\n          });\n        });\n      },\n    },\n  },\n};\n<\/script>\n\n<style>\n</style>\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("注册全局组件\nimport Carsousel from '@/components/Carousel'\nVue.component(Carsousel.name, Carsousel)\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('使用并传值\n             <Carsousel :list="list.carouselList"></Carsousel>\n\n')])])]),e("h2",{attrs:{id:"_26-开发步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_26-开发步骤"}},[a._v("#")]),a._v(" 26.开发步骤")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1.写静态页面 + 静态组件拆分出来\n2.发请求 api\n3.vuex 三连\n4.组件获取仓库数据 动态展示\n")])])]),e("h2",{attrs:{id:"_27-mapgetters拿数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_27-mapgetters拿数据"}},[a._v("#")]),a._v(" 27.mapGetters拿数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const getters = {\n    goodsList(state){\n        // state是小仓库的\n        // 如果没网 回出现undincd  返回[]来避免问题\n        return state.searchList.goodsList || [];\n    },\n    trademarkList(state){\n        return state.searchList.trademarkList || [];\n    },\n};\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("  import { mapGetters } from 'vuex'\n  \n      computed:{\n      ...mapGetters(['goodsList'])\n    },  \n")])])]),e("h2",{attrs:{id:"_28-全局事件总线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_28-全局事件总线"}},[a._v("#")]),a._v(" 28.全局事件总线")]),a._v(" "),e("p",[a._v("main.js注册")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("new Vue({\n  render: h => h(App),\n  // 注册路由\n  router,\n  // 注册仓库\n  store,\n  // 全局事件总线$bus配置\n  beforeCreate(){\n    Vue.prototype.$bus = this;\n  },\n}).$mount('#app')\n")])])]),e("p",[a._v("调用")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('      this.$bus.$emit("clear");\n')])])]),e("p",[a._v("触发")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('  mounted(){\n    this.$bus.$on("clear",()=>{\n      this.keyword = "";\n    })\n  },\n')])])]),e("h2",{attrs:{id:"_29-子与父通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_29-子与父通信"}},[a._v("#")]),a._v(" 29.子与父通信")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("自定义事件\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('父组件中\n给子组件绑定一个事件\n\n        \x3c!--selector--\x3e\n        <SearchSelector @trademarkInfo="trademarkInfo"/>\n      \n      \n   methods: {\n    // 自定义事件回调\n    trademarkInfo(trademark){\n      console.log(trademark);\n    },\n  },       \n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('子组件中\n          <li v-for="(trademark,index) in trademarkList" :key="trademark.tmId" @click="tradeMatkHandler(trademark)">{{ trademark.tmName }}</li>\n\n\n  methods:{\n    tradeMatkHandler(trademark){\n    \n      // 触发回调\n      this.$emit("trademarkInfo", trademark);\n    },\n  },\n\n')])])]),e("h2",{attrs:{id:"_30-封装数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_30-封装数据"}},[a._v("#")]),a._v(" 30.封装数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("需要 \"2:苹果\"\n\n// 整理参数\nthis.searchParams.trademark = `${trademark.tmId}:${trademark.tmName}`;\n\n需要 格式 ['a:b:c','b:b:b']\n\nlet props = `${attr.attrId}:${attrValue}:${attr.attrName}`\nthis.searchParams.props.push(props);\n\n")])])]),e("h2",{attrs:{id:"_31-数组操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_31-数组操作"}},[a._v("#")]),a._v(" 31.数组操作")]),a._v(" "),e("p",[a._v("去重")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\nif (this.searchParams.props.indexOf(props) == -1){\n        this.searchParams.props.push(props);\n      }\n")])])]),e("p",[a._v("删除")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    removeAttr(index){\n      this.searchParams.props.splice(index, 1);\n      this.getData();\n    },\n")])])]),e("p",[a._v("遍历")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    // 是否全选\n    isAllChecked(){\n      return this.cartInfoList.every(item => item.isChecked == 1);\n    },\n    \n    totalPrice(){\n      let sum = 0;\n      this.cartInfoList.forEach(item =>{\n        sum += item.skuNum * item.skuPrice;\n      })\n      return sum;\n    },\n    \n")])])]),e("h2",{attrs:{id:"_32-分页器原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_32-分页器原理"}},[a._v("#")]),a._v(" 32.分页器原理")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\n")])])]),e("h2",{attrs:{id:"_33-路由滚动行为"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_33-路由滚动行为"}},[a._v("#")]),a._v(" 33.路由滚动行为")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("export default new VueRouter({\n  routes: routes,\n  // 滚动行为\n  scrollBehavior (to, from, savedPosition) {\n    // return 期望滚动到哪个的位置\n    return {y:0};\n}\n})\n")])])]),e("p",[a._v("##34.动态类名")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(':class="{active:spuSaleAttrValue.isChecked==1}"\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('    <div class="swiper-wrapper">\n      <div\n        class="swiper-slide"\n        v-for="(slide, index) in skuImageList"\n        :key="slide.id"\n      >\n        <img :src="slide.imgUrl" :class="{active:currentIndex==index}"  @click="changeCurrentIndex(index)"/>\n      </div>\n    </div>\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("  data(){\n    return{\n      currentIndex:0,\n    }\n  },\n  \n  \n    methods:{\n    changeCurrentIndex(index){\n      this.currentIndex = index;\n    },\n  },\n\n")])])]),e("h2",{attrs:{id:"_35-排它-遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_35-排它-遍历"}},[a._v("#")]),a._v(" 35.排它 -- 遍历")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    // 产品属性切换高亮\n    changeActive(spuSaleAttrValue,arr){\n        arr.forEach(item=>{\n            item.isChecked = '0';\n        })\n        spuSaleAttrValue.isChecked = '1';\n    },\n")])])]),e("h2",{attrs:{id:"_36-放大镜"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_36-放大镜"}},[a._v("#")]),a._v(" 36.放大镜")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<template>\n  <div class="spec-preview">\n    <img :src="imgObj.imgUrl" />\n    <div class="event" @mousemove="handler"></div>\n    <div class="big">\n      <img :src="imgObj.imgUrl" ref="big" />\n    </div>\n    <div class="mask" ref="mask"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: "Zoom",\n  data(){\n    return{\n      currentIndex:0,\n    }\n  },\n  methods:{\n    handler(event){\n      let big = this.$refs.big;\n      let mask = this.$refs.mask;\n      let left = event.offsetX - mask.offsetWidth/2;\n      let top = event.offsetY - mask.offsetHeight/2;\n      // 修改\n      if(left<=0){\n        left = 0;\n      }\n      if(left>=mask.offsetWidth){\n        left = mask.offsetWidth;\n      }\n      if(top<=0){\n        top = 0;\n      }\n      if(top>=mask.offsetHeight){\n        top = mask.offsetHeight;\n      }\n      mask.style.left = left + \'px\';\n      mask.style.top = top + \'px\';\n\n      big.style.left = - 2 * left + \'px\';\n      big.style.top = - 2 * top + \'px\';\n\n    },\n  },\n  props: ["skuImageList"],\n  computed: {\n    imgObj() {\n      return this.skuImageList[this.currentIndex] || {};\n    },\n  },\n  mounted() {\n    this.$bus.$on("getIndex", (index) => {\n      this.currentIndex = index;\n    });\n  },\n};\n<\/script>\n\n<style lang="less">\n.spec-preview {\n  position: relative;\n  width: 400px;\n  height: 400px;\n  border: 1px solid #ccc;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  .event {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 998;\n  }\n\n  .mask {\n    width: 50%;\n    height: 50%;\n    background-color: rgba(0, 255, 0, 0.3);\n    position: absolute;\n    left: 0;\n    top: 0;\n    display: none;\n  }\n\n  .big {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: -1px;\n    left: 100%;\n    border: 1px solid #aaa;\n    overflow: hidden;\n    z-index: 998;\n    display: none;\n    background: white;\n\n    img {\n      width: 200%;\n      max-width: 200%;\n      height: 200%;\n      position: absolute;\n      left: 0;\n      top: 0;\n    }\n  }\n\n  .event:hover ~ .mask,\n  .event:hover ~ .big {\n    display: block;\n  }\n}\n</style>\n')])])]),e("h2",{attrs:{id:"_37-ref"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_37-ref"}},[a._v("#")]),a._v(" 37.ref")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<div class="mask" ref="mask"></div>\n\nlet mask = this.$refs.mask;\n')])])]),e("h2",{attrs:{id:"_38-浏览器存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_38-浏览器存储"}},[a._v("#")]),a._v(" 38.浏览器存储")]),a._v(" "),e("p",[a._v("本地存储")]),a._v(" "),e("p",[a._v("会话存储")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('json 先转化为字符串\nsessionStorage.setItem("SKUINFO", JSON.stringify(this.skuInfo));\n\n用的时候\nJSON.parse(sessionStorage.getItem("SKUINFO"));\n\n')])])]),e("h2",{attrs:{id:"_39-一个回调被多个元素使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_39-一个回调被多个元素使用"}},[a._v("#")]),a._v(" 39.一个回调被多个元素使用")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/zhuchenghao1337/github-images/main/2022/20230109234150.png",alt:""}})]),a._v(" "),e("p",[a._v("传一个参数 作为标记")]),a._v(" "),e("h2",{attrs:{id:"_40-回调传参-拿参方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_40-回调传参-拿参方式"}},[a._v("#")]),a._v(" 40.回调传参 拿参方式")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('@change="updateChecked(cart, $event)"\n\n$event 可以拿到很多数据\n\n')])])]),e("h2",{attrs:{id:"_41-前端的事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_41-前端的事务"}},[a._v("#")]),a._v(" 41.前端的事务")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('    deleteAllCheckedCart({dispatch, getters}){\n        let PromiseAll = [];\n        getters.cartList.cartInfoList.forEach(item =>{\n            if (item.isChecked == 1){\n                let promise = dispatch("deleteCartListBySkuId", item.skuId);\n                PromiseAll.push(promise);\n            }\n        })\n        return Promise.all(PromiseAll);\n    },\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('    // 删除所有选中的商品\n    async deleteAllCheckedCart(){\n      console.log(this.cartInfoList);\n      // 这里只能 一个一个删 会用到前端 事务\n      try {\n        await this.$store.dispatch("deleteAllCheckedCart");\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n')])])]),e("h2",{attrs:{id:"_42-路由守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_42-路由守卫"}},[a._v("#")]),a._v(" 42.路由守卫")]),a._v(" "),e("h3",{attrs:{id:"_1-被阻止后去之前要去的地方-全局守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-被阻止后去之前要去的地方-全局守卫"}},[a._v("#")]),a._v(" 1.被阻止后去之前要去的地方--全局守卫")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("登录成功的回调\n\n// 判断 是否去首页还是其他要求的地方\n        let toPath = this.$route.query.redirect || '/home'\n        this.$router.push(toPath);\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("全局守卫\n// 未登录情况\n    // 原来想去的地方\n    let path = to.path;\n    if (path.indexOf('/trade')!=-1 || path.indexOf('/pay')!=-1 || path.indexOf('/center')!=-1) {\n      // 原来想去的地方 保存到url上\n      next('/login?redirect='+path);\n    }else{\n      next();\n    }\n")])])]),e("h3",{attrs:{id:"_2-必须从指定页面来-路由独享守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-必须从指定页面来-路由独享守卫"}},[a._v("#")]),a._v(" 2.必须从指定页面来--路由独享守卫")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 想要去交易页面 你必须从购物车进去    \n    {\n        path: '/trade',\n        component: Trade,\n        name: 'trade',\n        meta: {\n            isShow: false\n        },\n        beforeEnter: (to, from, next) => {\n            // 想要进这个页面 你必须从购物车进去\n            if(from.path == '/shopCart'){\n                next();\n            }else{\n                next(false);\n            }\n        }\n    },\n")])])]),e("h3",{attrs:{id:"_3-组件内守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-组件内守卫"}},[a._v("#")]),a._v(" 3.组件内守卫")]),a._v(" "),e("h2",{attrs:{id:"_43-v-if-v-else妙用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_43-v-if-v-else妙用"}},[a._v("#")]),a._v(" 43.v-if v-else妙用")]),a._v(" "),e("h2",{attrs:{id:"_44-导航守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_44-导航守卫"}},[a._v("#")]),a._v(" 44.导航守卫")]),a._v(" "),e("h2",{attrs:{id:"_45-api全局注册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_45-api全局注册"}},[a._v("#")]),a._v(" 45.api全局注册")]),a._v(" "),e("h2",{attrs:{id:"_46-生成二维码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_46-生成二维码"}},[a._v("#")]),a._v(" 46.生成二维码")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm i qrcode\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('    async open() {\n      // 生成二维码\n      let url = await QRCode.toDataURL(this.payInfo.codeUrl);\n      this.$alert(`<img src=${url} />`, "请你微信支付", {\n        dangerouslyUseHTMLString: true,\n        center: true,\n        showCancelButton: true,\n        cancelButtonText: "支付遇到问题",\n        confirmButtonText: "已支付成功",\n        showClose: false,\n      });\n    },\n')])])]),e("h2",{attrs:{id:"_47-定时器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_47-定时器"}},[a._v("#")]),a._v(" 47.定时器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("      timer: null,\n      \n      \n \n      // 一直向服务器 问\n      // 定时器 如果没有定时器 就开启一个 一定要移除定时器\n      if(!this.timer){\n        this.timer = setInterval(async ()=>{\n          let res = await this.$API.reqPayStatus(this.orderId)\n          console.log(res);\n          if(res.code == 200){\n            // 支付成功\n            // 1.清除定时器\n            clearInterval(this.timer);\n            this.timer = null;\n            // 2.保存数据\n            this.code = res.code;\n            // 3.隐藏弹出框\n            this.$msgbox.close();\n            // 4.跳转路由\n            this.$router.push('/paysuccess');\n          }\n        }, 1000)\n      }\n")])])]),e("h2",{attrs:{id:"_48-二级路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_48-二级路由"}},[a._v("#")]),a._v(" 48.二级路由")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    {\n        path: '/center',\n        component: Center,\n        name: 'center',\n        meta: {\n            isShow: false\n        },\n        children:[\n            {\n                path: 'myorder',\n                component: myOrder,\n            },\n            {\n                path: 'grouporder',\n                component: groupOrder,\n            },\n            // 重定向\n            {\n                path:'/center',\n                redirect:'/center/myorder'\n            }\n        ]\n    },\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("        <router-view></router-view>\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("重定向 比较重要\n")])])]),e("h2",{attrs:{id:"_49-图片懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_49-图片懒加载"}},[a._v("#")]),a._v(" 49.图片懒加载")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vue-lazyload\n1. 其他版本可能会失效\nnpm i vue-lazyload@1.3.3\n2.\nimport VueLazyload from 'vue-lazyload'\n// 引入图片\nimport atm from '@/assets/1.gif'\nVue.use(VueLazyload, {\n  // 默认图片\n  loading: atm,\n})\n3. 使用v-lazy指令\n<img v-lazy=\"good.defaultImg\" />\n")])])]),e("h2",{attrs:{id:"_50-validate表单验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_50-validate表单验证"}},[a._v("#")]),a._v(" 50.validate表单验证")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vee-validate\n1.\nnpm install vee-validate@2.0.0-rc.25\n2.\n")])])]),e("h2",{attrs:{id:"_51-路由懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_51-路由懒加载"}},[a._v("#")]),a._v(" 51.路由懒加载")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const UserDetails = () => import('./views/UserDetails.vue')\n")])])]),e("h2",{attrs:{id:"_52-不加密打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_52-不加密打包"}},[a._v("#")]),a._v(" 52.不加密打包")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vue.config.js\n\nproductionSourceMap:false, // 打包不加密\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);